version: '2.1'

services:

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
    depends_on:
      - kafka
  dynamodb-local:
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  init-dynamo:
    image: garland/aws-cli-docker
    command: >
          sh -c "aws dynamodb create-table --table-name stat \
                --attribute-definitions AttributeName=hashKey,AttributeType=S \
                --key-schema AttributeName=hashKey,KeyType=HASH \
                --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 \
                --endpoint-url http://172.17.0.1:8000 &&
                aws dynamodb create-table --table-name dna \
                --attribute-definitions AttributeName=idDna,AttributeType=N \
                --key-schema AttributeName=idDna,KeyType=HASH \
                --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 \
                --endpoint-url http://172.17.0.1:8000
              "
    links:
      - dynamodb-local
    environment:
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=eu-central-1
  redis:
    container_name: sbs_redis
    image: redis:6.2.3
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

networks:
  backend:
    driver: bridge